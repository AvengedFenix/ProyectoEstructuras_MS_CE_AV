/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectoestructuras;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Stack;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Maslz
 */
public class GUIProject extends javax.swing.JFrame {

    /**
     * Creates new form GUIProject
     */
    public GUIProject() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_desempeno = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jl_elegir1 = new javax.swing.JLabel();
        tf_pathtree = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        ta_evaluacion = new javax.swing.JTextArea();
        jd_resolucion = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        tf_math = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jl_answer = new javax.swing.JLabel();
        jd_bicoloreable = new javax.swing.JDialog();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jt_gruporojo = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        jt_grupoazul = new javax.swing.JTextArea();
        jl_bicolorResp = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jl_rojo = new javax.swing.JLabel();
        jl_azul = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jl_elegir3 = new javax.swing.JLabel();
        jd_compresion = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_original = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        ta_binary = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jp_comprimir = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jp_descomprimir = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jp_elegir2 = new javax.swing.JPanel();
        jl_elegir2 = new javax.swing.JLabel();
        jd_krusprim = new javax.swing.JDialog();
        jPanel14 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jd_floyd = new javax.swing.JDialog();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        floyd_ta = new javax.swing.JTextArea();
        jPanel18 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jd_dijkstra = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jt_dijkstra = new javax.swing.JTextArea();
        jc_origen = new javax.swing.JComboBox<>();
        jb_dijkstra = new javax.swing.JButton();
        panel_p = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();

        jPanel2.setBackground(new java.awt.Color(207, 103, 102));

        jLabel3.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("P O R   D E S E M P E Ñ O");

        jLabel2.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(207, 103, 102));
        jLabel2.setText("C A L C U L O   D E   E V A L U A C I Ó N");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2))
        );

        jl_elegir1.setFont(new java.awt.Font("Montserrat", 1, 13)); // NOI18N
        jl_elegir1.setForeground(new java.awt.Color(207, 103, 102));
        jl_elegir1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jl_elegir1.setText("E l e g i r   a r c h i v o");
        jl_elegir1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_elegir1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jl_elegir1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jl_elegir1, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
        );

        tf_pathtree.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N

        ta_evaluacion.setColumns(20);
        ta_evaluacion.setRows(5);
        jScrollPane3.setViewportView(ta_evaluacion);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(182, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_pathtree, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(169, 169, 169))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(48, 48, 48)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tf_pathtree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(96, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jd_desempenoLayout = new javax.swing.GroupLayout(jd_desempeno.getContentPane());
        jd_desempeno.getContentPane().setLayout(jd_desempenoLayout);
        jd_desempenoLayout.setHorizontalGroup(
            jd_desempenoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_desempenoLayout.setVerticalGroup(
            jd_desempenoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(48, 65, 93));

        jLabel10.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("E X P R E S I O N E S   M A T E M Á T I C A S");

        jLabel9.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(48, 65, 93));
        jLabel9.setText("R E S O L U C I Ó N");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(18, 18, 18))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        tf_math.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        tf_math.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_mathActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("E s c r i b i r   e x p r e s i o n   m a t e m á t i c a");

        jLabel17.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(48, 65, 93));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("R E S O L V E R");
        jLabel17.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel17MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
        );

        jLabel18.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("R E S P U E S T A :");

        jl_answer.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        jl_answer.setForeground(new java.awt.Color(255, 255, 255));
        jl_answer.setText("[     ]");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(243, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel16)
                    .addComponent(tf_math, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(16, 16, 16)
                        .addComponent(jl_answer))
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(236, 236, 236))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addGap(107, 107, 107)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_math, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jl_answer))
                .addContainerGap(109, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jd_resolucionLayout = new javax.swing.GroupLayout(jd_resolucion.getContentPane());
        jd_resolucion.getContentPane().setLayout(jd_resolucionLayout);
        jd_resolucionLayout.setHorizontalGroup(
            jd_resolucionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_resolucionLayout.setVerticalGroup(
            jd_resolucionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel11.setBackground(new java.awt.Color(148, 97, 142));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jt_gruporojo.setColumns(20);
        jt_gruporojo.setRows(5);
        jScrollPane4.setViewportView(jt_gruporojo);

        jPanel11.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 272, 221, 158));

        jt_grupoazul.setColumns(20);
        jt_grupoazul.setRows(5);
        jScrollPane5.setViewportView(jt_grupoazul);

        jPanel11.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 270, 224, 158));

        jl_bicolorResp.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jPanel11.add(jl_bicolorResp, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 201, 228, 58));

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        jLabel19.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(148, 97, 142));
        jLabel19.setText("G R A F O");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabel19)
                .addGap(19, 19, 19))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jPanel11.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(352, 58, -1, -1));

        jLabel23.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("B I C O L O R E A B L E");
        jLabel23.setToolTipText("");
        jPanel11.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 89, -1, -1));

        jl_rojo.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        jl_rojo.setForeground(new java.awt.Color(255, 255, 255));
        jl_rojo.setText("C O L O R   R O J O");
        jPanel11.add(jl_rojo, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 240, -1, 23));

        jl_azul.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        jl_azul.setForeground(new java.awt.Color(255, 255, 255));
        jl_azul.setText("C O L O R   A Z U L");
        jPanel11.add(jl_azul, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 240, -1, 23));

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));

        jl_elegir3.setFont(new java.awt.Font("Montserrat", 1, 13)); // NOI18N
        jl_elegir3.setForeground(new java.awt.Color(148, 97, 142));
        jl_elegir3.setText("E l e g i r   a r c h i v o");
        jl_elegir3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_elegir3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jl_elegir3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jl_elegir3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel11.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(347, 152, -1, 20));

        javax.swing.GroupLayout jd_bicoloreableLayout = new javax.swing.GroupLayout(jd_bicoloreable.getContentPane());
        jd_bicoloreable.getContentPane().setLayout(jd_bicoloreableLayout);
        jd_bicoloreableLayout.setHorizontalGroup(
            jd_bicoloreableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, 869, Short.MAX_VALUE)
        );
        jd_bicoloreableLayout.setVerticalGroup(
            jd_bicoloreableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(142, 174, 189));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText(" D E   A R C H I V O S");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(342, 100, -1, -1));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel11.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(142, 174, 189));
        jLabel11.setText("C O M P R E S I Ó N");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(19, 19, 19))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jPanel4.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(296, 69, -1, -1));

        ta_original.setColumns(20);
        ta_original.setFont(new java.awt.Font("Montserrat", 0, 15)); // NOI18N
        ta_original.setLineWrap(true);
        ta_original.setRows(5);
        ta_original.setWrapStyleWord(true);
        jScrollPane1.setViewportView(ta_original);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 220, 270, 202));

        ta_binary.setColumns(20);
        ta_binary.setFont(new java.awt.Font("Montserrat", 0, 15)); // NOI18N
        ta_binary.setLineWrap(true);
        ta_binary.setRows(5);
        ta_binary.setWrapStyleWord(true);
        jScrollPane2.setViewportView(ta_binary);

        jPanel4.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 210, 270, 202));

        jLabel13.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("T E X T O   O R I G I N A L");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, -1, -1));

        jLabel14.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("T E X T O   C O M P R I M I D O");
        jPanel4.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(564, 188, -1, -1));

        jp_comprimir.setBackground(new java.awt.Color(255, 255, 255));

        jLabel15.setBackground(new java.awt.Color(6, 47, 79));
        jLabel15.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(142, 174, 189));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("C O M P R I M I R");
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jp_comprimirLayout = new javax.swing.GroupLayout(jp_comprimir);
        jp_comprimir.setLayout(jp_comprimirLayout);
        jp_comprimirLayout.setHorizontalGroup(
            jp_comprimirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
        );
        jp_comprimirLayout.setVerticalGroup(
            jp_comprimirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
        );

        jPanel4.add(jp_comprimir, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 460, -1, 20));

        jp_descomprimir.setBackground(new java.awt.Color(255, 255, 255));

        jLabel29.setBackground(new java.awt.Color(6, 47, 79));
        jLabel29.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(142, 174, 189));
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("D E S C O M P R I M I R");
        jLabel29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel29MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jp_descomprimirLayout = new javax.swing.GroupLayout(jp_descomprimir);
        jp_descomprimir.setLayout(jp_descomprimirLayout);
        jp_descomprimirLayout.setHorizontalGroup(
            jp_descomprimirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
        );
        jp_descomprimirLayout.setVerticalGroup(
            jp_descomprimirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
        );

        jPanel4.add(jp_descomprimir, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 460, -1, 20));

        jp_elegir2.setBackground(new java.awt.Color(255, 255, 255));

        jl_elegir2.setBackground(new java.awt.Color(6, 47, 79));
        jl_elegir2.setFont(new java.awt.Font("Montserrat", 1, 13)); // NOI18N
        jl_elegir2.setForeground(new java.awt.Color(142, 174, 189));
        jl_elegir2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jl_elegir2.setText("E l e g i r   a r c h i v o");
        jl_elegir2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_elegir2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jp_elegir2Layout = new javax.swing.GroupLayout(jp_elegir2);
        jp_elegir2.setLayout(jp_elegir2Layout);
        jp_elegir2Layout.setHorizontalGroup(
            jp_elegir2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jl_elegir2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );
        jp_elegir2Layout.setVerticalGroup(
            jp_elegir2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp_elegir2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jl_elegir2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4.add(jp_elegir2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 160, 170, -1));

        javax.swing.GroupLayout jd_compresionLayout = new javax.swing.GroupLayout(jd_compresion.getContentPane());
        jd_compresion.getContentPane().setLayout(jd_compresionLayout);
        jd_compresionLayout.setHorizontalGroup(
            jd_compresionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_compresionLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 858, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jd_compresionLayout.setVerticalGroup(
            jd_compresionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_compresionLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel14.setBackground(new java.awt.Color(142, 174, 189));

        jLabel26.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(240, 240, 240));
        jLabel26.setText("K R U S K A L   &   P R I M");
        jLabel26.setToolTipText("");

        jLabel25.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(142, 174, 189));
        jLabel25.setText("G R A F O");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabel25)
                .addGap(19, 19, 19))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jLabel35.setFont(new java.awt.Font("Montserrat", 1, 13)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(142, 174, 189));
        jLabel35.setText("E l e g i r   a r c h i v o");
        jLabel35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel35MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel35)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel35, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(268, 268, 268)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel26)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(286, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel26)
                .addGap(113, 113, 113)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(301, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jd_krusprimLayout = new javax.swing.GroupLayout(jd_krusprim.getContentPane());
        jd_krusprim.getContentPane().setLayout(jd_krusprimLayout);
        jd_krusprimLayout.setHorizontalGroup(
            jd_krusprimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_krusprimLayout.setVerticalGroup(
            jd_krusprimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel16.setBackground(new java.awt.Color(207, 103, 102));

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));

        jLabel27.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(207, 103, 102));
        jLabel27.setText("G R A F O");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabel27)
                .addGap(19, 19, 19))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jLabel28.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("A L G O R I T M O   F L O Y D");
        jLabel28.setToolTipText("");

        floyd_ta.setEditable(false);
        floyd_ta.setColumns(20);
        floyd_ta.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        floyd_ta.setRows(5);
        jScrollPane6.setViewportView(floyd_ta);

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));

        jLabel31.setFont(new java.awt.Font("Montserrat", 1, 13)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(207, 103, 102));
        jLabel31.setText("E l e g i r   a r c h i v o");
        jLabel31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel31MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel31)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel28)
                    .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(182, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel28)
                .addGap(58, 58, 58)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jd_floydLayout = new javax.swing.GroupLayout(jd_floyd.getContentPane());
        jd_floyd.getContentPane().setLayout(jd_floydLayout);
        jd_floydLayout.setHorizontalGroup(
            jd_floydLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_floydLayout.setVerticalGroup(
            jd_floydLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel8.setBackground(new java.awt.Color(48, 65, 93));

        jLabel32.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(48, 65, 93));
        jLabel32.setText("G R A F O");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabel32)
                .addGap(19, 19, 19))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel32, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jLabel33.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(240, 240, 240));
        jLabel33.setText("A L G O R I T M O   D I J K S T R A");
        jLabel33.setToolTipText("");

        jLabel34.setFont(new java.awt.Font("Montserrat", 1, 13)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(48, 65, 93));
        jLabel34.setText("E l e g i r   a r c h i v o");
        jLabel34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel34MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel34)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
        );

        jt_dijkstra.setColumns(20);
        jt_dijkstra.setRows(5);
        jScrollPane7.setViewportView(jt_dijkstra);

        jb_dijkstra.setText("OK");
        jb_dijkstra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_dijkstraMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(181, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33)
                    .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(173, 173, 173))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(154, 154, 154)
                .addComponent(jc_origen, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jb_dijkstra, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel33)
                        .addGap(62, 62, 62)
                        .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jc_origen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jb_dijkstra)))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jd_dijkstraLayout = new javax.swing.GroupLayout(jd_dijkstra.getContentPane());
        jd_dijkstra.getContentPane().setLayout(jd_dijkstraLayout);
        jd_dijkstraLayout.setHorizontalGroup(
            jd_dijkstraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_dijkstraLayout.setVerticalGroup(
            jd_dijkstraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 153, 153));
        setSize(new java.awt.Dimension(1000, 1000));

        panel_p.setBackground(new java.awt.Color(0, 121, 107));
        panel_p.setPreferredSize(new java.awt.Dimension(800, 800));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(0, 153, 153));
        jLabel1.setFont(new java.awt.Font("Montserrat", 1, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 121, 107));
        jLabel1.setText("T D A   P R O J E C T");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(34, 34, 34))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel5.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("C A L C U L O   D E   E V A L U A C I Ó N");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("R E S O L U C I Ó N   D E   E X P R E S I O N E S   M A T E M Á T I C A S");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("C O M P R E S I Ó N   D E   A R C H I V O S   D E   T E X T O");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("G R A F O   B I - C O L O R E A B L E");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("A L G O R I T M O   F L O Y D");
        jLabel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel20MouseClicked(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("A L G O R I T M O   D I J K S T R A");
        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel21MouseClicked(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("K R U S K A L   Y   P R I M");
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel22MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panel_pLayout = new javax.swing.GroupLayout(panel_p);
        panel_p.setLayout(panel_pLayout);
        panel_pLayout.setHorizontalGroup(
            panel_pLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_pLayout.createSequentialGroup()
                .addContainerGap(190, Short.MAX_VALUE)
                .addGroup(panel_pLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22))
                .addContainerGap(190, Short.MAX_VALUE))
        );
        panel_pLayout.setVerticalGroup(
            panel_pLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_pLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jLabel5)
                .addGap(40, 40, 40)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jLabel7)
                .addGap(40, 40, 40)
                .addComponent(jLabel8)
                .addGap(40, 40, 40)
                .addComponent(jLabel20)
                .addGap(40, 40, 40)
                .addComponent(jLabel21)
                .addGap(40, 40, 40)
                .addComponent(jLabel22)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_p, javax.swing.GroupLayout.DEFAULT_SIZE, 990, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_p, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_goActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_goActionPerformed
        // TODO add your handling code here:
        save();

    }//GEN-LAST:event_bt_goActionPerformed

    private void TF_compresionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF_compresionKeyPressed
        if (evt.getKeyCode() == 13) {
            save();
        }
    }//GEN-LAST:event_TF_compresionKeyPressed

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
        /*adminPerson ap = new adminPerson("./personas.txt");
        ap.cargarArchivo();
        Person p = new Person("Juan", 20);
        ap.setPerson(p);

        ap.escribirArchivo();
         */
        ta_evaluacion.setText("");
        jd_desempeno.pack();
        jd_desempeno.setLocationRelativeTo(null);
        jd_desempeno.setVisible(true);

        /*for (int i = 0; i < ap.getListaPersonas().size(); i++) {
            //cb_empleados.addItem(ap.getListaPersonas().get(i).getName());
        }*/
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        jd_compresion.pack();
        jd_compresion.setLocationRelativeTo(null);
        jd_compresion.setVisible(true);
    }//GEN-LAST:event_jLabel7MouseClicked


    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
        jd_resolucion.pack();
        jd_resolucion.setLocationRelativeTo(null);
        jd_resolucion.setVisible(true);
    }//GEN-LAST:event_jLabel6MouseClicked


    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        // TODO add your handling code here:
        JDialog dialog = new JDialog();
        if (ta_original.getText() == "") {
            JLabel label1 = new JLabel("Por favor escribir en el text area");
            dialog.add(label1);

        } else {
            Huffman huff = new Huffman();
            String texto = ta_original.getText();
            System.out.println(texto);
            huff.HuffCompress(texto);
            ta_original.setText("");
            JLabel label2 = new JLabel("Archivo de texto comprimido exitosamente");
            dialog.add(label2);

        }

        dialog.setLocationRelativeTo(null);
        dialog.setTitle("Importante");
        dialog.pack();

    }//GEN-LAST:event_jLabel15MouseClicked

    private void tf_mathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_mathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_mathActionPerformed

    private void jl_elegir1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_elegir1MouseClicked
        // TODO add your handling code here:
/*
        Person p = new Person("Andre");
        TreeNode root = new TreeNode(p);

        TreeNode n = new TreeNode(new Person("Mario"));
        TreeNode n2 = new TreeNode(new Person("Calvin", 5));

        root.addTreeNode(n);
        root.addTreeNode(n2);
        root.addTreeNode(new TreeNode(new Person("Jorge", 8)));

        TreeNode tn2 = new TreeNode(new Person("Carlos", 5));
        TreeNode tn3 = new TreeNode(new Person("Jose"));
        n.addTreeNode(tn2);
        n.addTreeNode(tn3);

        tn3.addTreeNode(new TreeNode(new Person("Karl", 10)));
        tn3.addTreeNode(new TreeNode(new Person("Bart", 20)));
        tn3.addTreeNode(new TreeNode(new Person("James", 6)));
         */
        pathTree = load();
        tf_pathtree.setText(pathTree);
        TreeNode root;
        try {
            root = createTree(pathTree);
        } catch (IOException ex) {
            Logger.getLogger(GUIProject.class.getName()).log(Level.SEVERE, null, ex);
        }
        /*
        try {
            node = createTree(pathTree);
        } catch (IOException ex) {
            Logger.getLogger(GUIProject.class.getName()).log(Level.SEVERE, null, ex);
        }
         */
        //root.evaluarPOrden(root);
        /*ArrayList<TreeNode> postorder = root.getPostOrder(root);

        for (int i = 0; i < postorder.size(); i++) {
            ta_evaluacion.append(i + ". " + postorder.get(i).getPersona().getName() + ": " + postorder.get(i).getPersona().getEvaluation() + "\n");
        }*/


    }//GEN-LAST:event_jl_elegir1MouseClicked

    private void jLabel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseClicked
        // TODO add your handling code here:
        String str = tf_math.getText();

        //String s = "  (4/2*  3*4)  +(10/5)^2";
        //String infix = "5-5";
        String s2 = str.replaceAll(" ", "");
        String format = "";

        StringTokenizer st = new StringTokenizer(s2, "+*/-()^", true);
        while (st.hasMoreTokens()) {
            format += st.nextToken() + " ";
        }

        System.out.println("");
        System.out.println("Format: " + format);

        System.out.println("");
        String[] finalinfix = infixtoPostfix(format.split(" "));
        System.out.println("Infix to Postfix: " + Arrays.toString(finalinfix) + "\n");

        BinTree bt = postf_toTree(finalinfix);

        bt.inorden(bt);
        System.out.print(" = " + bt.evaluar(bt));
        System.out.println("");

        jl_answer.setText(Double.toString(bt.evaluar(bt)));


    }//GEN-LAST:event_jLabel17MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        jt_gruporojo.setVisible(false);
        jt_grupoazul.setVisible(false);
        jl_rojo.setVisible(false);
        jl_azul.setVisible(false);
        jd_bicoloreable.pack();
        jd_bicoloreable.setLocationRelativeTo(null);
        jd_bicoloreable.setVisible(true);
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jl_elegir3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_elegir3MouseClicked
        this.jt_gruporojo.setText("");
        this.jt_grupoazul.setText("");
        pathGrafo = load();
        //tf_pathtree.setText(pathTree);
        GrafoMatriz g;
        try {
            g = createMatriz(pathGrafo, true);
            System.out.println("Nodos adyacentes: \n");
            for (int i = 0; i < g.getMatrizAdy().length; i++) {
                g.imprimirNodosAdy(i);
            }
            System.out.println("");

            System.out.println("Matriz de adyacencia: \n");
            g.imprimirMatrizAdy();
            System.out.println("");
            ArrayList<String> colores = g.Bicoloreable(0);
            //System.out.println("Size: " + colores.size());
            jl_bicolorResp.setText(g.isBicoloreable() ? ("Bi-coloreable!") : ("No es bi-coloreable :("));

            /*for(String color : colores){
                System.out.println("Color: " + color);
            }*/
            if (g.isBicoloreable()) {
                for (int i = 0; i < colores.size(); i++) {
                    if (colores.get(i).equals("azul")) {
                        jt_grupoazul.append(Integer.toString(i) + "\n");
                    } else {
                        jt_gruporojo.append(Integer.toString(i) + "\n");
                    }
                }
            }

            jt_gruporojo.setVisible(true);
            jt_grupoazul.setVisible(true);
            jl_rojo.setVisible(true);
            jl_azul.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(GUIProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jl_elegir3MouseClicked

    private void jLabel29MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel29MouseClicked
        // TODO add your handling code here:
        String bin = binary.get(0).toString() + "0";
        System.out.println("");
        System.out.println(bin);
        BinTree raiz = huff.HuffDecompress(binary);
        String tex = DecomText(raiz, raiz, bin, "", 0);
        ta_original.setText(this.text);
    }//GEN-LAST:event_jLabel29MouseClicked

    private void jl_elegir2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_elegir2MouseClicked
        // TODO add your handling code here:
        String path = load();
        binary = huff.read(path);
        this.text = "";
        this.decompressed = false;

        ta_binary.setText(binary.get(0).toString());
    }//GEN-LAST:event_jl_elegir2MouseClicked

    private void jLabel31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel31MouseClicked
        // TODO add your handling code here:
        /*String path = load();
        FloydMayweather fm = new FloydMayweather();

        String texto = fm.Floyd(path);
        floyd_ta.setText(fm.getText());
        floyd_ta.updateUI();*/
        floyd_ta.setText("");
        String path = load();
        GrafoMatriz grafo;
        try {
            grafo = createMatriz(path, false);
            Floyd floyd = new Floyd(grafo);
            
            double[][] distancias = floyd.distanciaTodosLosDestinos();
            
            for (int i = 0; i < distancias.length; i++) {
                for (int j = 0; j < distancias.length; j++) {
                    if(j < distancias.length-1)
                        floyd_ta.append(distancias[i][j] + "\t");
                    else
                        floyd_ta.append(distancias[i][j] + "");
                }floyd_ta.append("\n");
            }
            
            //floyd_ta.updateUI();
        } catch (IOException ex) {
            Logger.getLogger(GUIProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel31MouseClicked

    private void jLabel20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseClicked
        // TODO add your handling code here:
        jd_floyd.pack();
        jd_floyd.setLocationRelativeTo(null);
        jd_floyd.setVisible(true);
    }//GEN-LAST:event_jLabel20MouseClicked

    private void jLabel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseClicked
        // TODO add your handling code here:
        jd_dijkstra.pack();
        jd_dijkstra.setLocationRelativeTo(null);
        jd_dijkstra.setVisible(true);
    }//GEN-LAST:event_jLabel21MouseClicked

    private void jLabel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseClicked
        // TODO add your handling code here:
        jd_krusprim.pack();
        jd_krusprim.setLocationRelativeTo(null);
        jd_krusprim.setVisible(true);
    }//GEN-LAST:event_jLabel22MouseClicked

    private void jLabel34MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel34MouseClicked
        jt_dijkstra.setText("");
        pathGrafo = load();
        
        try {
            Grafo g = createGrafoAdj(pathGrafo);
            actual = g;
            Object[] origen = new Object[g.getNodos().size()];
            for (int i = 0; i < origen.length; i++) {
                jc_origen.addItem(Integer.toString(i));
                //posibilities[i-1] = i;
            }
        } catch (IOException ex) {
            Logger.getLogger(GUIProject.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        //tf_pathtree.setText(pathTree); 
        
    }//GEN-LAST:event_jLabel34MouseClicked

    private void jLabel35MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel35MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel35MouseClicked

    private void jb_dijkstraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_dijkstraMouseClicked
        Grafo g;
        this.jt_dijkstra.setText("");

        try {
            g = actual;
            //System.out.println("cant nodos: " + g.getNodos().size());
            for (int i = 0; i < g.getNodos().size(); i++) {
                System.out.println(g.getNodos().get(i).printNodosAdy());
            }

            Grafo copia = g;

            Dijkstra dijkstra = new Dijkstra(copia, g.getNodos().get(jc_origen.getSelectedIndex()));

            //Map<Nodo, Double> distanciass = dijkstra.DijkstraFinal();
            Map<Nodo, Double>  dist = dijkstra.dijkstra();
            //System.out.println("dinstancia final\n");
            for (Entry<Nodo, Double> distancia : dist.entrySet()) {
                Nodo n = distancia.getKey();
                double d = distancia.getValue();
               
                this.jt_dijkstra.append(dijkstra.origen.getId() + " -> " + n.getId() + ": " + d + "\n");

                //System.out.println(dijkstra.origen.getId() + " -> " + n.getId() + ": " + d);
            }
            
            
            /*System.out.println("SIZE: " +dist.size());
            for (int i = 0; i < dist.size(); i++) {
                System.out.println("distancia: " + dist.get(i));
            }*/
        } catch (Exception ex) {
            Logger.getLogger(GUIProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jb_dijkstraMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIProject().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea floyd_ta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JButton jb_dijkstra;
    private javax.swing.JComboBox<String> jc_origen;
    private javax.swing.JDialog jd_bicoloreable;
    private javax.swing.JDialog jd_compresion;
    private javax.swing.JDialog jd_desempeno;
    private javax.swing.JDialog jd_dijkstra;
    private javax.swing.JDialog jd_floyd;
    private javax.swing.JDialog jd_krusprim;
    private javax.swing.JDialog jd_resolucion;
    private javax.swing.JLabel jl_answer;
    private javax.swing.JLabel jl_azul;
    private javax.swing.JLabel jl_bicolorResp;
    private javax.swing.JLabel jl_elegir1;
    private javax.swing.JLabel jl_elegir2;
    private javax.swing.JLabel jl_elegir3;
    private javax.swing.JLabel jl_rojo;
    private javax.swing.JPanel jp_comprimir;
    private javax.swing.JPanel jp_descomprimir;
    private javax.swing.JPanel jp_elegir2;
    private javax.swing.JTextArea jt_dijkstra;
    private javax.swing.JTextArea jt_grupoazul;
    private javax.swing.JTextArea jt_gruporojo;
    private javax.swing.JPanel panel_p;
    private javax.swing.JTextArea ta_binary;
    private javax.swing.JTextArea ta_evaluacion;
    private javax.swing.JTextArea ta_original;
    private javax.swing.JTextField tf_math;
    private javax.swing.JTextField tf_pathtree;
    // End of variables declaration//GEN-END:variables

    private String pathTree;
    private String pathGrafo;
    private ArrayList binary;
    private Huffman huff = new Huffman();
    private boolean decompressed;
    private String text;
    private TreeNode foundTree = null;
    Grafo actual = null;

    public void save() {
        // String texto = TF_compresion.getText();
        File archiv = null;
        FileWriter fw = null;
        BufferedWriter bw = null;

        try {
            archiv = new File("./compresion.txt");
            fw = new FileWriter(archiv, true);
            //si el archivo no existe lo crea y si ya existe los sobreescribe (al menos que append
            bw = new BufferedWriter(fw);
            //     bw.write(texto);
            bw.flush();

        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            //primero se borra el buffer
            bw.close();
            fw.close();
        } catch (Exception e) {
        }
    }

    public String load() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos .txt", "txt");
        fileChooser.setFileFilter(filtro);

        int seleccion = fileChooser.showOpenDialog(this);

        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File dir = fileChooser.getSelectedFile();
            System.out.println(dir.getPath());
            return dir.getPath();
        } else {
            return null;
        }
    }

    public TreeNode treeExists(int n, TreeNode nodo) {

        if (nodo != null) {
            for (int i = 0; i < nodo.getChildren().size(); i++) {
                treeExists(n, nodo.getChildren().get(i));
            }

            if (nodo.getNumNodo() == n) {
                return nodo;
            } else {
                return null;
            }

        }

        return null;
    }

    public static String[] infixtoPostfix(String[] infix) {
        Stack<String> s = new Stack();
        StringBuilder sb = new StringBuilder();

        for (String infix1 : infix) {
            if (infix1.equals(" ")) {//si hay un espacio no hace nada
            } else if (isDigit(infix1)) {//si infix[i] o infix1 es un digito, se agrega directamente al stringbuilder
                sb.append(infix1).append(" ");
            } else if (isOperator(infix1)) {//si es operador verifica que el stack no este vacio y la precedencia mas alta
                while (!s.isEmpty() && !s.peek().equals("(") && precedenciaMasAlta(s.peek(), infix1)) {
                    sb.append(s.pop()).append(" ");
                }
                
                s.push(infix1);
            } else if (infix1.equals("(")) {//si encuentra un "(" se agrega al stack
                s.push(infix1);
            } else if (infix1.equals(")")) {
                while (!s.empty() && !s.peek().equals("(")) {
                    sb.append(s.pop()).append(" ");
                }
                s.pop();
            }
        }

        while (!s.isEmpty()) {
            sb.append(s.pop()).append(" ");
        }

        String[] sFinal = sb.toString().split(" ");
        return sFinal;
    }

    public static BinTree postf_toTree(String[] s) {//ESTO TIENE QUE ESTAR EN EL MAIN o en una clase Tree que contenga un nodo root pero no se si es necesario
        BinTree b = new BinTree();

        Stack<BinTree> stackTree = new Stack();

        for (int i = 0; i < s.length; i++) {
            b.postfixTree(s[i], stackTree);
        }

        return stackTree.pop();
    }

    public static boolean isDigit(String s) {
        return Character.isDigit(s.charAt(0));
    }

    public static boolean isOperator(String s) {
        return s.equals("+") || s.equals("-") || s.equals("*") || s.equals("/") || s.equals("^") || s.equals("!");
    }

    public static int Precedencia(String s) {
        int pre = 0;
        if (s.equals("+") || s.equals("-")) {
            pre = 1;
        }
        if (s.equals("*") || s.equals("/")) {
            pre = 2;
        }
        if (s.equals("^")) {
            pre = 3;
        }
        return pre;
    }

    public static boolean precedenciaMasAlta(String s, String s2) {
        int prec = Precedencia(s);
        int prec2 = Precedencia(s2);

        if (prec == prec2) {
            if (s.equals("^")) {//if(Associative(s))
                return false;
            } else {
                return true;
            }
        } else {
            if (prec > prec2) {
                return true;
            }

        }
        return false;
    }

    public GrafoMatriz createMatriz(String path, boolean dirigido) throws IOException {
        BufferedReader br = new BufferedReader(new FileReader(path));
        GrafoMatriz g;
        ArrayList<String[]> info = new ArrayList();
        try {
            String line = br.readLine();

            //int[][] matriz = new int[5][5];
            while (line != null) {
                String s = line.replaceAll(" ", "");
                info.add(s.split(","));
                //String[] x = info.get(info.size()-1);
                /*for(String s : x){
                    s = s.replaceAll(" ", "");
                }*/
                //System.out.println(Arrays.toString(s.split(",")));
                line = br.readLine();
            }

            for (int i = 0; i < info.size(); i++) {
                System.out.println(Arrays.toString(info.get(i)));
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            br.close();
        }
        g = new GrafoMatriz(info.size(), dirigido);

        double[][] matriz = new double[info.size()][info.size()];
        for (int i = 0; i < info.size(); i++) {
            for (int j = 0; j < info.size(); j++) {
                matriz[i][j] = Double.parseDouble(info.get(i)[j]);
                System.out.print(info.get(i)[j] + " ");
            }
            System.out.println("");
        }

        g.setMatrizAdy(matriz);
        //System.out.println(g.isBicoloreable());

        return g;
    }

    public String DecomText(BinTree raiz, BinTree node, String binary, String text, int x) {
        System.out.println("");
        System.out.println("x: " + x);
        System.out.println("length: " + binary.length());

        System.out.println("TEXT: " + text);
        this.text = text;
        if (x >= binary.length()) {
            //text = text.concat(node.getInfo());
            decompressed = true;
            return text;
        }

        if (!decompressed && x < binary.length()) {
            if (binary.charAt(x) == '0' && !node.isLeaf(node)) {
                DecomText(raiz, node.getLNode(), binary, text, x + 1);
            } else if (binary.charAt(x) == '0' && node.isLeaf(node)) {
                text = text.concat(node.getInfo());
                DecomText(raiz, raiz, binary, text, x);

            }

            if (binary.charAt(x) == '1' && !node.isLeaf(node)) {
                DecomText(raiz, node.getRNode(), binary, text, x + 1);
            } else if (binary.charAt(x) == '1' && node.isLeaf(node)) {
                text = text.concat(node.getInfo());
                DecomText(raiz, raiz, binary, text, x);
            }
        }

        return text;
    }

    public TreeNode createTree(String path) throws IOException {

        TreeNode root = new TreeNode();
        BufferedReader br = new BufferedReader(new FileReader(path));
        try {
            String line = br.readLine();

            ArrayList<String[]> info = new ArrayList();

            while (line != null) {
                String s = line.replaceAll(" ", "");
                info.add(s.split(","));
                //String[] x = info.get(info.size()-1);
                /*for(String s : x){
                    s = s.replaceAll(" ", "");
                }*/
                System.out.println(Arrays.toString(line.split(",")));
                line = br.readLine();
            }

            ArrayList<Integer> nodosUnicos = new ArrayList();

            TreeNode rootTree = null;
            ArrayList<TreeNode> padreNotFoundNodo = new ArrayList();
            ArrayList<Integer> padreNotFoundPadre = new ArrayList();
            ArrayList<Integer> padres = new ArrayList();

            for (int i = 0; i < info.size(); i++) {
                int numeroNodo = Integer.parseInt(info.get(i)[0]);
                int padre = Integer.parseInt(info.get(i)[1]);
                double evaluacion = Integer.parseInt(info.get(i)[2]);
                
                if(padre == -1){
                    rootTree = new TreeNode(numeroNodo, evaluacion);
                }
            }
            for (int i = 0; i < info.size(); i++) {
                int numeroNodo = Integer.parseInt(info.get(i)[0]);
                //System.out.println("Num Nodo: " + numeroNodo);
                if (!nodosUnicos.contains(numeroNodo)) {
                    nodosUnicos.add(numeroNodo);
                    int padre = Integer.parseInt(info.get(i)[1]);
                    //System.out.println("Padre: " + padre);
                    double evaluacion = Integer.parseInt(info.get(i)[2]);

                    if(padre != -1) {
                        TreeNode p = findPadre(rootTree, padre);
                        p = foundTree;
                        if (foundTree != null/*!existe.contains(padre)*/) {
                            TreeNode hijo = new TreeNode(numeroNodo, evaluacion);
                            //System.out.println("n padre: " + foundTree.getNumNodo() + "\n");
                            p.addTreeNode(hijo);
                            //mapaarbol.put(hijo, new ArrayList());
                        } else {
                            //padreNotFound.put(new TreeNode(numeroNodo, evaluacion), padre);
                            padreNotFoundNodo.add(new TreeNode(numeroNodo, evaluacion));
                            padreNotFoundPadre.add(padre);
                            /*for (Entry<TreeNode, ArrayList<TreeNode>> mapa : mapaarbol.entrySet()) {
                            if (mapa.getKey().getNumNodo() == padre) {
                                mapa.getValue().add(new TreeNode(numeroNodo, evaluacion));
                            }
                        }*/
                        }
                    }
                    if (!padres.contains(padre)) {
                        padres.add(padre);
                    }
                }

                foundTree = null;

                //if(treeExists)
                /*if (treeExists(hijo, rootTree) == null) {
                    System.out.println("no existe nodo");


                    //TreeNode nuevoNodo = new TreeNode(numeroNodo)
                }*/
            }

            /*/for (Entry<TreeNode, ArrayList<TreeNode>> map : mapaarbol.entrySet()) {
                System.out.println(map.getKey().getNumNodo() + ": ");
                StringBuilder sb = new StringBuilder();
                System.out.println("size: " + map.getValue().size());
                for (TreeNode nodo : map.getValue()) {
                    sb.append(nodo.getNumNodo()).append(", ");
                }

                System.out.print(sb.toString());
            }*/
            for (int i = 0; i < padreNotFoundNodo.size(); i++) {
                if (!nodosUnicos.contains(padreNotFoundPadre.get(i))) {
                    padreNotFoundNodo.remove(i);
                    padreNotFoundPadre.remove(i);
                }
            }

            while (!padreNotFoundNodo.isEmpty()) {
                for (int i = 0; i < padreNotFoundNodo.size(); i++) {
                    TreeNode nodo = padreNotFoundNodo.get(i);
                    TreeNode padre = findPadre(rootTree, padreNotFoundPadre.get(i));
                    padre = foundTree;

                    if (!padres.contains(padreNotFoundPadre.get(i))) {
                        System.out.println("No se encontro padre de nodo" + nodo.getNumNodo());
                        //padreNotFound.remove(nodo, notFound.getValue());
                        padreNotFoundNodo.remove(i);
                        padreNotFoundPadre.remove(i);

                    } else if (padre != null) {
                        //System.out.println("padre de " + nodo.getNumNodo() + ": " + padreNotFoundPadre.get(i));
                        padre.addTreeNode(nodo);
                        padreNotFoundNodo.remove(i);
                        padreNotFoundPadre.remove(i);
                        //padreNotFound.remove(nodo, notFound.getValue());
                    }
                    foundTree = null;
                }

            }

            //cont++;
            //rootTree.Evaluar();
            System.out.println("Evaluacion: " + rootTree.evaluarTree(rootTree));

        } catch (IOException e) {

        } finally {
            br.close();
        }

        return root;
    }

    public TreeNode findPadre(TreeNode raiz, int n) {
        TreeNode find = null;

        for (int i = 0; i < raiz.getChildren().size(); i++) {
            find = findPadre(raiz.getChildren().get(i), n);
        }

        if (n == raiz.getNumNodo()) {
            find = raiz;
            System.out.println("returned " + raiz.getNumNodo());
            foundTree = raiz;
            return find;
        }

        if (foundTree == null) {
            return null;
        } else {
            return find;
        }
    }

    public Grafo createGrafoAdj(String path) throws FileNotFoundException, IOException {
        Grafo g = new Grafo();
        BufferedReader br = new BufferedReader(new FileReader(path));
        ArrayList<String[]> info = new ArrayList();

        try {
            String line = br.readLine();

            //int[][] matriz = new int[5][5];
            while (line != null) {
                String s = line.replaceAll(" ", "");
                info.add(s.split(","));
                //String[] x = info.get(info.size()-1);
                /*for(String s : x){
                    s = s.replaceAll(" ", "");
                }*/
                // System.out.println(Arrays.toString(s.split(",")));
                line = br.readLine();
            }

            for (int i = 0; i < info.size(); i++) {
                System.out.println(Arrays.toString(info.get(i)));
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            br.close();
        }
        System.out.println("");
        ArrayList<Nodo> nodos = new ArrayList();
        for (int i = 0; i < info.size(); i++) {
            nodos.add(new Nodo(Integer.toString(i)));
        }

        for (int i = 0; i < info.size(); i++) {
            for (int j = 0; j < info.size(); j++) {
                if (Integer.parseInt(info.get(i)[j]) != 0) {
                    nodos.get(i).agregarArista(nodos.get(j), Double.parseDouble(info.get(i)[j]));
                    //n.getNodosAdyacentes().add(new Nodo(Integer.toString(j)));
                    //n.getPesoAdyacente().add(Double.parseDouble(info.get(i)[j]));
                }
            }
            g.agregarNodo(nodos.get(i));
        }

        return g;
    }

}
